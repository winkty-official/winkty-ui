{
  "name": "neon-pulse",
  "type": "registry:ui",
  "dependencies": ["framer-motion"],
  "files": [
    {
      "name": "neon-pulse.tsx",
      "content": "\"use client\";\n\nimport type React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\n\ninterface NeonPulseProps {\n  text: string;\n  className?: string;\n  color?: string;\n  glowColor?: string;\n  fontSize?: string;\n  pulseDuration?: number;\n}\n\nconst useNeonPulse = (duration: number) => {\n  const [intensity, setIntensity] = useState(1);\n\n  useEffect(() => {\n    const pulseInterval = setInterval(() => {\n      setIntensity((prev) => (prev === 1 ? 0.5 : 1));\n    }, duration);\n\n    return () => clearInterval(pulseInterval);\n  }, [duration]);\n\n  return intensity;\n};\n\nexport const NeonPulse: React.FC<NeonPulseProps> = ({\n  text,\n  className = \"\",\n  color = \"#ff00ff\",\n  glowColor = \"#ff00ff\",\n  fontSize = \"4rem\",\n  pulseDuration = 1500,\n}) => {\n  const intensity = useNeonPulse(pulseDuration);\n\n  return (\n    <div className={`relative ${className}`}>\n      <motion.div\n        className=\"absolute inset-0 blur-xl\"\n        style={{\n          backgroundColor: glowColor,\n          opacity: 0.7,\n        }}\n        animate={{ opacity: [0.5, 0.7, 0.6] }}\n        transition={{\n          duration: pulseDuration / 1000,\n          repeat: Number.POSITIVE_INFINITY,\n          ease: \"easeInOut\",\n        }}\n      />\n      <motion.h1\n        className=\"relative z-10\"\n        style={{\n          fontSize,\n          fontWeight: \"bold\",\n          color: color,\n          textShadow: `0 0 5px ${glowColor}, 0 0 10px ${glowColor}, 0 0 20px ${glowColor}`,\n        }}\n        animate={{\n          textShadow: `0 0 5px ${glowColor}, 0 0 ${10 * intensity}px ${glowColor}, 0 0 ${20 * intensity}px ${glowColor}`,\n        }}\n        transition={{\n          duration: pulseDuration / 1000,\n          repeat: Number.POSITIVE_INFINITY,\n          ease: \"easeInOut\",\n        }}\n      >\n        {text.split(\"\").map((char, index) => (\n          <motion.span\n            key={index}\n            initial={{ opacity: 0, y: -20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: index * 0.1, duration: 0.5 }}\n          >\n            {char}\n          </motion.span>\n        ))}\n      </motion.h1>\n    </div>\n  );\n};",
      "dir": "components/fancy/neon-pulse"
    },
    {
      "name": "index.ts",
      "content": "export { NeonPulse } from \"./neon-pulse\";\nexport type { NeonPulseProps } from \"./neon-pulse\";",
      "dir": "components/fancy/neon-pulse"
    }
  ],
  "styles": [
    {
      "name": "neon-pulse.css",
      "content": "@keyframes pulse {\n  0%, 100% { opacity: 1; }\n  50% { opacity: 0.5; }\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .neon-pulse * {\n    animation: none !important;\n    transition: none !important;\n  }\n}",
      "dir": "styles/components"
    }
  ],
  "author": "Your Name <your.email@example.com>",
  "title": "Neon Pulse",
  "description": "A customizable neon text effect component with smooth pulsing animations.",
  "features": [
    "Smooth pulsing neon glow effect",
    "Customizable text and glow colors",
    "Adjustable animation timing",
    "Letter-by-letter animation option",
    "Responsive text sizing",
    "Optimized performance with Framer Motion",
    "Reduced motion support",
    "Accessible text rendering"
  ],
  "version": "1.0.0",
  "license": "MIT"
}
