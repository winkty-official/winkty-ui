{
  "name": "area-radio-group",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-radio-group",
    "next",
    "class-variance-authority"
  ],
  "files": [
    {
      "name": "area-radio-group.tsx",
      "content": "\"use client\";\n\nimport React from \"react\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { cn } from \"@/lib/utils\";\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\";\nimport Image from \"next/image\";\nimport { Label } from \"@/components/ui/label\";\n\nexport interface RadioItem {\n  id: string | number;\n  value: string;\n  label: string;\n  description?: string;\n  imageUrl?: string;\n  disabled?: boolean;\n}\n\nexport interface AreaRadioGroupProps\n  extends React.ComponentPropsWithoutRef<typeof RadioGroup> {\n  items: RadioItem[];\n  defaultValue?: string;\n  name?: string;\n  orientation?: \"horizontal\" | \"vertical\";\n  onValueChange?: (value: string) => void;\n  error?: boolean;\n  helperText?: string;\n  required?: boolean;\n  className?: string;\n}\n\nexport interface RadioItemProps\n  extends React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item> {\n  value: string;\n  RadioGroupContainerProps?: React.HTMLProps<HTMLDivElement>;\n  children: React.ReactNode;\n}\n\nconst RadioItem = React.forwardRef<HTMLDivElement, RadioItemProps>(\n  ({ value, RadioGroupContainerProps, children, className, ...itemProps }, ref) => {\n    const { className: containerClassName, ...containerProps } = RadioGroupContainerProps || {};\n    \n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"relative flex w-full items-start gap-2 rounded-lg border border-input p-4 shadow-sm shadow-black/5 transition-colors\",\n          \"has-[[data-state=checked]]:border-primary has-[[data-state=checked]]:bg-primary/5\",\n          \"hover:bg-muted/50\",\n          containerClassName\n        )}\n        {...containerProps}\n      >\n        <RadioGroupItem\n          value={value}\n          id={value}\n          aria-describedby={`${value}-description`}\n          className={cn(\"after:absolute after:inset-0\", className)}\n          {...itemProps}\n        />\n        <div className=\"flex grow items-start gap-3\">{children}</div>\n      </div>\n    );\n  }\n);\n\nRadioItem.displayName = \"RadioItem\";\n\nconst AreaRadioGroup = React.forwardRef<HTMLDivElement, AreaRadioGroupProps>(\n  ({ \n    items, \n    defaultValue, \n    name,\n    orientation = \"vertical\",\n    onValueChange,\n    error,\n    helperText,\n    required,\n    className,\n    ...props \n  }, ref) => {\n    return (\n      <div ref={ref} className={cn(\"space-y-2\", className)}>\n        <RadioGroup\n          defaultValue={defaultValue}\n          name={name}\n          onValueChange={onValueChange}\n          className={cn(\n            \"space-y-2\",\n            orientation === \"horizontal\" && \"flex space-x-2 space-y-0\"\n          )}\n          required={required}\n          {...props}\n        >\n          {items?.map((item) => (\n            <RadioItem\n              key={item.id}\n              value={item.value}\n              disabled={item.disabled}\n              className={cn(error && \"border-destructive\")}\n            >\n              <div className=\"flex items-center space-x-3\">\n                {item.imageUrl && (\n                  <Image\n                    src={item.imageUrl}\n                    alt={item.label}\n                    width={32}\n                    height={24}\n                    className=\"shrink-0 rounded object-cover\"\n                  />\n                )}\n                <div className=\"flex flex-col\">\n                  <Label\n                    htmlFor={item.value}\n                    className={cn(\n                      item.disabled && \"opacity-50\",\n                      error && \"text-destructive\"\n                    )}\n                  >\n                    {item.label}\n                  </Label>\n                  {item.description && (\n                    <p\n                      id={`${item.value}-description`}\n                      className={cn(\n                        \"text-sm text-muted-foreground\",\n                        item.disabled && \"opacity-50\"\n                      )}\n                    >\n                      {item.description}\n                    </p>\n                  )}\n                </div>\n              </div>\n            </RadioItem>\n          ))}\n        </RadioGroup>\n        {helperText && (\n          <p className={cn(\n            \"text-sm\",\n            error ? \"text-destructive\" : \"text-muted-foreground\"\n          )}>\n            {helperText}\n          </p>\n        )}\n      </div>\n    );\n  }\n);\n\nAreaRadioGroup.displayName = \"AreaRadioGroup\";\n\nexport default AreaRadioGroup;",
      "dir": "components/base/radio"
    },
    {
      "name": "area-radio-group.css",
      "content": ".area-radio-group {\n  @apply space-y-2;\n}\n\n.area-radio-item {\n  @apply relative flex w-full items-start gap-2 rounded-lg border border-input p-4 shadow-sm shadow-black/5 transition-colors;\n  @apply has-[[data-state=checked]]:border-primary has-[[data-state=checked]]:bg-primary/5;\n  @apply hover:bg-muted/50;\n}",
      "dir": "styles/components"
    },
    {
      "name": "index.tsx",
      "content": "import * as React from \"react\";\nimport { RadioGroup } from \"@/components/ui/radio-group\";\n\nexport interface RadioItem {\n  id: string | number;\n  value: string;\n  label: string;\n  description?: string;\n  imageUrl?: string;\n  disabled?: boolean;\n}\n\nexport interface AreaRadioGroupProps\n  extends React.ComponentPropsWithoutRef<typeof RadioGroup> {\n  items: RadioItem[];\n  defaultValue?: string;\n  name?: string;\n  orientation?: \"horizontal\" | \"vertical\";\n  onValueChange?: (value: string) => void;\n  error?: boolean;\n  helperText?: string;\n  required?: boolean;\n  className?: string;\n}\n\nexport { AreaRadioGroup } from \"./area-radio-group\";",
      "dir": "registry/area-radio-group"
    }
  ],
  "author": "Your Name <your.email@example.com>",
  "title": "Area Radio Group",
  "description": "A flexible radio group component that supports rich content, images, and descriptions. Perfect for payment method selectors, plan choosers, and more."
}
