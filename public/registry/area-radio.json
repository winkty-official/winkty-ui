{
  "name": "area-radio",
  "type": "registry:ui",
  "registryDependencies": [
    "label",
    "utils"
  ],
  "dependencies": [
    "@radix-ui/react-radio-group"
  ],
  "files": [
    {
      "type": "registry:ui",
      "content": "\"use client\";\r\nimport React from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport * as RadioGroup from \"@radix-ui/react-radio-group\";\r\n\r\n// Define types for radio items\r\nexport interface AreaRadioItem {\r\n  id: string | number;\r\n  value: string;\r\n  disabled?: boolean;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport interface AreaRadioGroupProps\r\n  extends React.ComponentPropsWithoutRef<typeof RadioGroup.Root> {\r\n  error?: boolean;\r\n  helperText?: string;\r\n  className?: string;\r\n}\r\n\r\nexport interface AreaRadioItemProps\r\n  extends React.ComponentPropsWithoutRef<typeof RadioGroup.Item> {\r\n  value: string;\r\n  RadioGroupContainerProps?: React.HTMLProps<HTMLDivElement>;\r\n  children: React.ReactNode;\r\n  // indicatorType?: \"border\" | \"check\" | \"radio\";\r\n  // radioPosition?: \"left\" | \"right\";\r\n  indicator?: React.ReactNode;\r\n  indicatorPosition?: \"left\" | \"right\";\r\n}\r\n\r\nconst AreaRadioItem = React.forwardRef<HTMLButtonElement, AreaRadioItemProps>(\r\n  (\r\n    {\r\n      value,\r\n      children,\r\n      className,\r\n      indicator,\r\n      indicatorPosition = \"left\",\r\n      ...itemProps\r\n    },\r\n    ref\r\n  ) => {\r\n    return (\r\n      <RadioGroup.Item\r\n        ref={ref}\r\n        value={value}\r\n        className={cn(\r\n          \"group peer w-full\",\r\n          \"relative rounded-lg border border-input bg-background shadow-sm transition-all duration-150\",\r\n          \"hover:bg-muted/50\",\r\n          \"group-data-[state=checked]:border-primary group-data-[state=checked]:bg-primary/5\",\r\n          \"group-data-[state=checked]:ring-2 group-data-[state=checked]:ring-primary/10\",\r\n          className\r\n        )}\r\n        {...itemProps}\r\n      >\r\n        <Label\r\n          htmlFor={value}\r\n          className=\"flex w-full cursor-pointer items-start p-4\"\r\n        >\r\n          {indicatorPosition === \"left\" && (\r\n            <div className=\"flex h-full items-center pr-2\">\r\n              {indicator ? (\r\n                <div className=\" opacity-0 group-data-[state=checked]:opacity-100\">\r\n                  {indicator}\r\n                </div>\r\n              ) : (\r\n                <div className=\"h-4 w-4 rounded-full border border-primary bg-background transition-colors group-data-[state=checked]:bg-primary\">\r\n                  <RadioGroup.Indicator className=\"flex h-full w-full items-center justify-center\">\r\n                    <div className=\"h-2 w-2 rounded-full bg-white\" />\r\n                  </RadioGroup.Indicator>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          <div className=\"flex grow\">{children}</div>\r\n          {indicatorPosition === \"right\" && (\r\n            <div className=\"flex h-full items-center pl-2\">\r\n              {indicator ? (\r\n                <div className=\" opacity-0 group-data-[state=checked]:opacity-100\">\r\n                  {indicator}\r\n                </div>\r\n              ) : (\r\n                <div className=\"h-4 w-4 rounded-full border border-primary bg-background transition-colors group-data-[state=checked]:bg-primary\">\r\n                  <RadioGroup.Indicator className=\"flex h-full w-full items-center justify-center\">\r\n                    <div className=\"h-2 w-2 rounded-full bg-white\" />\r\n                  </RadioGroup.Indicator>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </Label>\r\n      </RadioGroup.Item>\r\n    );\r\n  }\r\n);\r\n\r\nAreaRadioItem.displayName = \"AreaRadioItem\";\r\n\r\nconst AreaRadioGroup = React.forwardRef<HTMLDivElement, AreaRadioGroupProps>(\r\n  (\r\n    {\r\n      defaultValue,\r\n      name,\r\n      onValueChange,\r\n      error,\r\n      helperText,\r\n      required,\r\n      className,\r\n      children,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    return (\r\n      <>\r\n        <RadioGroup.Root\r\n          ref={ref}\r\n          defaultValue={defaultValue}\r\n          name={name}\r\n          onValueChange={onValueChange}\r\n          className={cn(\"flex flex-col gap-2\", className)}\r\n          required={required}\r\n          {...props}\r\n        >\r\n          {children}\r\n        </RadioGroup.Root>\r\n        {helperText && (\r\n          <p\r\n            className={cn(\r\n              \"text-sm mt-2\",\r\n              error ? \"text-destructive\" : \"text-muted-foreground\"\r\n            )}\r\n          >\r\n            {helperText}\r\n          </p>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nAreaRadioGroup.displayName = \"AreaRadioGroup\";\r\n\r\nexport { AreaRadioItem };\r\nexport default AreaRadioGroup;\r\n",
      "path": "ui/area-radio.tsx",
      "target": "components/ui/area-radio.tsx"
    }
  ]
}