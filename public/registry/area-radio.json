{
  "name": "area-radio",
  "type": "registry:ui",
  "registryDependencies": [
    "label",
    "utils"
  ],
  "dependencies": [
    "@radix-ui/react-radio-group"
  ],
  "files": [
    {
      "type": "registry:ui",
      "content": "\"use client\";\nimport { Label } from \"@/components/ui/label\";\nimport { cn } from \"@/lib/utils\";\nimport * as RadioGroup from \"@radix-ui/react-radio-group\";\nimport React from \"react\";\n\n// Define types for radio items\nexport interface AreaRadioItem {\n  id: string | number;\n  value: string;\n  disabled?: boolean;\n  children: React.ReactNode;\n}\n\nexport interface AreaRadioGroupProps\n  extends React.ComponentPropsWithoutRef<typeof RadioGroup.Root> {\n  error?: boolean;\n  helperText?: string;\n  className?: string;\n}\n\nexport interface AreaRadioItemProps\n  extends React.ComponentPropsWithoutRef<typeof RadioGroup.Item> {\n  value: string;\n  RadioGroupContainerProps?: React.HTMLProps<HTMLDivElement>;\n  children: React.ReactNode;\n  // indicatorType?: \"border\" | \"check\" | \"radio\";\n  // radioPosition?: \"left\" | \"right\";\n  indicator?: React.ReactNode;\n  indicatorPosition?: \"left\" | \"right\";\n}\n\nconst AreaRadioItem = React.forwardRef<HTMLButtonElement, AreaRadioItemProps>(\n  (\n    {\n      value,\n      children,\n      className,\n      indicator,\n      indicatorPosition = \"left\",\n      ...itemProps\n    },\n    ref\n  ) => {\n    return (\n      <RadioGroup.Item\n        ref={ref}\n        value={value}\n        className={cn(\n          \"group peer w-full\",\n          \"relative rounded-lg border border-input bg-background shadow-sm transition-all duration-150\",\n          \"hover:bg-muted/50\",\n          \"group-data-[state=checked]:border-primary group-data-[state=checked]:bg-primary/5\",\n          \"group-data-[state=checked]:ring-2 group-data-[state=checked]:ring-primary/10\",\n          className\n        )}\n        {...itemProps}\n      >\n        <Label\n          htmlFor={value}\n          className=\"flex w-full cursor-pointer items-start p-4\"\n        >\n          {indicatorPosition === \"left\" && (\n            <div className=\"flex h-full items-center pr-2\">\n              {indicator ? (\n                <div className=\" opacity-0 group-data-[state=checked]:opacity-100\">\n                  {indicator}\n                </div>\n              ) : (\n                <div className=\"h-4 w-4 rounded-full border border-primary bg-background transition-colors group-data-[state=checked]:bg-primary\">\n                  <RadioGroup.Indicator className=\"flex h-full w-full items-center justify-center\">\n                    <div className=\"h-2 w-2 rounded-full bg-white\" />\n                  </RadioGroup.Indicator>\n                </div>\n              )}\n            </div>\n          )}\n          <div className=\"flex grow\">{children}</div>\n          {indicatorPosition === \"right\" && (\n            <div className=\"flex h-full items-center pl-2\">\n              {indicator ? (\n                <div className=\" opacity-0 group-data-[state=checked]:opacity-100\">\n                  {indicator}\n                </div>\n              ) : (\n                <div className=\"h-4 w-4 rounded-full border border-primary bg-background transition-colors group-data-[state=checked]:bg-primary\">\n                  <RadioGroup.Indicator className=\"flex h-full w-full items-center justify-center\">\n                    <div className=\"h-2 w-2 rounded-full bg-white\" />\n                  </RadioGroup.Indicator>\n                </div>\n              )}\n            </div>\n          )}\n        </Label>\n      </RadioGroup.Item>\n    );\n  }\n);\n\nAreaRadioItem.displayName = \"AreaRadioItem\";\n\nconst AreaRadioGroup = React.forwardRef<HTMLDivElement, AreaRadioGroupProps>(\n  (\n    {\n      defaultValue,\n      name,\n      onValueChange,\n      error,\n      helperText,\n      required,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <>\n        <RadioGroup.Root\n          ref={ref}\n          defaultValue={defaultValue}\n          name={name}\n          onValueChange={onValueChange}\n          className={cn(\"flex flex-col gap-2\", className)}\n          required={required}\n          {...props}\n        >\n          {children}\n        </RadioGroup.Root>\n        {helperText && (\n          <p\n            className={cn(\n              \"text-sm mt-2\",\n              error ? \"text-destructive\" : \"text-muted-foreground\"\n            )}\n          >\n            {helperText}\n          </p>\n        )}\n      </>\n    );\n  }\n);\n\nAreaRadioGroup.displayName = \"AreaRadioGroup\";\n\nexport { AreaRadioItem };\nexport default AreaRadioGroup;\n",
      "path": "ui/area-radio.tsx",
      "target": "components/ui/area-radio.tsx"
    }
  ]
}